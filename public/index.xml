<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Francesco Lanza</title><link>https://example.com/</link><description>Recent content on Francesco Lanza</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Mon, 25 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://example.com/posts/2014/09/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://example.com/posts/2014/09/creating-a-new-theme/</guid><description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://example.com/posts/2014/03/migrate-to-hugo-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://example.com/posts/2014/03/migrate-to-hugo-from-jekyll/</guid><description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
â–¾ &amp;lt;root&amp;gt;/ â–¾ images/ logo.png should become
â–¾ &amp;lt;root&amp;gt;/ â–¾ static/ â–¾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>Twemoji Support ðŸ¤©</title><link>https://example.com/posts/2020/05/twemoji-support/</link><pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate><guid>https://example.com/posts/2020/05/twemoji-support/</guid><description>If you want to use Twitter&amp;rsquo;s Twemoji across your website, enable it in your config.toml
[params] enableTwemoji = true This will not only give your website unified emojis across all platforms. It will also give you the latest Unicode 13 emoji set, such as ðŸ§‹ðŸ«•ðŸ›»ðŸª—ðŸªž.
Emoji size changes with text size ðŸ¤© Emoji size changes with text size ðŸ¤© Emoji size changes with text size ðŸ¤© Emoji size changes with text size ðŸ¤© Emoji size changes with text size ðŸ¤© Emoji size changes with text size ðŸ¤©</description></item><item><title>Render LaTeX using KaTeX</title><link>https://example.com/posts/2019/03/render-latex-using-katex/</link><pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate><guid>https://example.com/posts/2019/03/render-latex-using-katex/</guid><description>Enable katex by adding katex = &amp;quot;true&amp;quot; to the front matter
+++ katex = &amp;#34;true&amp;#34; +++ If you want to enable KaTeX or MathJax for all post, add katex = ture or math = true in config.toml in [params] section.
It&amp;rsquo;s almost a dropin alternative to the mathjax solution,you should just choose one of them.
Inline math looks like this
This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} = 1$ This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} = 1$</description></item><item><title>Hugo coder wiki</title><link>https://example.com/posts/2019/01/hugo-coder-wiki/</link><pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate><guid>https://example.com/posts/2019/01/hugo-coder-wiki/</guid><description/></item><item><title>Dummy</title><link>https://example.com/posts/2018/12/dummy/</link><pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate><guid>https://example.com/posts/2018/12/dummy/</guid><description>Nada para ver aqui!</description></item><item><title>Theme Demo</title><link>https://example.com/posts/2017/01/theme-demo/</link><pubDate>Sun, 08 Jan 2017 00:00:00 +0000</pubDate><guid>https://example.com/posts/2017/01/theme-demo/</guid><description>Style Demo h1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading This is bold text
This is bold text
This is italic text
This is italic text
Deleted text
This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} = 1$ and with math blocks:
$$ \sum_{n=1}^{\infty} 2^{-n} = 1 $$
Heading Another heading text text text text text text Block quotes are written like so.</description></item><item><title>About</title><link>https://example.com/about/</link><pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate><guid>https://example.com/about/</guid><description>Hugo is the worldâ€™s fastest framework for building websites. It is written in Go.
It makes use of a variety of open source projects including:
https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Learn more and contribute on GitHub.</description></item><item><title>(Hu)go Template Primer</title><link>https://example.com/posts/2014/04/hugo-template-primer/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://example.com/posts/2014/04/hugo-template-primer/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://example.com/posts/2014/04/getting-started-with-hugo/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://example.com/posts/2014/04/getting-started-with-hugo/</guid><description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item></channel></rss>